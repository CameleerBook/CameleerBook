[
  {
    "name": "I. Introduction",
    "number": 1,
    "icon": {
      "name": "functions"
    },
    "proofs": [
      {
        "name": "Time Conversion",
        "link": "1_time"
      },
      {
        "name": "Count (Lists)",
        "link": "2_count_list"
      },
      {
        "name": "Count (Arrays)",
        "link": "3_count_array"
      }
    ]
  },
  {
    "name": "II. Arithmetic",
    "number": 2,
    "icon": {
      "name": "functions"
    },
    "proofs": [
      {
        "name": "Extended GCD (Functional)",
        "link": "1_extended_gcd"
      },
      {
        "name": "McCarthy's 91 Function",
        "link": "2_mccarthy"
      },
      {
        "name": "Euclidean Division (Imperative)",
        "link": "3_eudiv"
      },
      {
        "name": "Iterative Fibonacci",
        "link": "4_fib"
      },
      {
        "name": "Extended GCD (Imperative)",
        "link": "5_extended_gcd2"
      },
      {
        "name": "Fast Exponentiation (Imperative)",
        "link": "6_imp_fastexp"
      },
      {
        "name": "Exercise 1",
        "link": "1_eudiv_neg"
      },
      {
        "name": "Exercise 2",
        "link": "2_fun_eudiv"
      },
      {
        "name": "Exercise 3",
        "link": "3_fact"
      },
      {
        "name": "Exercise 4",
        "link": "4_trib"
      },
      {
        "name": "Exercise 5",
        "link": "5_fun_fastexp"
      }
    ]
  },
  {
    "name": "III. Searching Algorithms",
    "number": 3,
    "icon": {
      "name": "search"
    },
    "proofs": [
      {
        "name": "Linear Search (For Loop)",
        "link": "1_lsearch_for"
      },
      {
        "name": "Binary Search (Option Values)",
        "link": "2_bsearch"
      },
      {
        "name": "Ternary Search (Option Values)",
        "link": "3_tsearch_opt"
      },
      {
        "name": "Ternary Search (Exceptions)",
        "link": "4_tsearch_exp"
      },
      {
        "name": "Depth-First Search For Binary Trees",
        "link": "5_btree_depth"
      },
      {
        "name": "Exercise 1",
        "link": "1_lsearch_back"
      }
    ]
  },
  {
    "name": "IV. Sorting Algorithms",
    "number": 4,
    "icon": {
      "name": "sort"
    },
    "proofs": [
      {
        "name": "Selection Sort (Functional)",
        "link": "1_func_selsort"
      },
      {
        "name": "Selection Sort (Tail Recursion)",
        "link": "2_tail_selsort"
      },
      {
        "name": "Merge Sort (Functional)",
        "link": "3_func_mergesort"
      },
      {
        "name": "Quick Sort (Functional)",
        "link": "4_func_quicksort"
      },
      {
        "name": "Quick Sort (Optimized Tail Recursion)",
        "link": "5_tail_opt_quicksort"
      },
      {
        "name": "Selection Sort (Polymorphic & Functional)",
        "link": "6_poly_selsort"
      },
      {
        "name": "Insertion Sort (Imperative)",
        "link": "7_imp_insort"
      },
      {
        "name": "Exercise 1",
        "link": "1_func_insort"
      },
      {
        "name": "Exercise 2",
        "link": "2_tail_opt_insort"
      },
      {
        "name": "Exercise 3",
        "link": "3_poly_insort"
      },
      {
        "name": "Exercise 4",
        "link": "4_tail_opt_selsort"
      },
      {
        "name": "Exercise 5",
        "link": "5_imp_selsort"
      },
      {
        "name": "Exercise 6",
        "link": "6_poly_mergesort"
      },
      {
        "name": "Exercise 7",
        "link": "7_tail_quicksort"
      },
      {
        "name": "Exercise 8",
        "link": "8_poly_quicksort"
      }
    ]
  },
  {
    "name": "V. Data Structures",
    "number": 5,
    "icon": {
      "name": "data_array"
    },
    "proofs": [
      {
        "name": "Persistant Queue",
        "link": "persist_queue"
      },
      {
        "name": "Linked Listed",
        "link": "linkedlist"
      },
      {
        "name": "List Zipper",
        "link": "list_zipper"
      },
      {
        "name": "Same Fringe with Zippers",
        "link": "tree_zipper"
      }
    ]
  },
  {
    "name": "VI. Selected Topics",
    "number": 6,
    "icon": {
      "name": "functions"
    },
    "proofs": []
  },
    {
    "name": "Archived Proofs",
    "number": 7,
    "icon": {
      "name": "functions"
    },
    "proofs": [
      {
        "name": "Binary Search (Exceptions)",
        "link": "bsearch_excp"
      },
      {
        "name": "Fermat's Little Theorem",
        "link": "fermat"
      },
      {
        "name": "Modular Arithmetic",
        "link": "modarith"
      },
      {
        "name": "Tail Recursive Insertion Sort",
        "link": "tail_insort"
      },
      {
        "name": "Tail Recursive Merge Sort",
        "link": "tail_mergesort"
      },
      {
        "name": "Optmized Tail Recursive Merge Sort",
        "link": "tail_opt_mergesort"
      }
    ]
  }
]